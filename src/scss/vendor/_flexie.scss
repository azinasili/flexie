// ----------------------------------------------------------------------------
// Flexie grid system
// @author: Azin Asili
//
// Flexie is a modular SCSS flexbox grid system
// Use the predefined row an column mixins
// or customize your own grid system with the helper mixins
//
// 1. Options
// 2. Row helpers
// 3. Column helpers
// 4. Flexie mixins
// ----------------------------------------------------------------------------


// ----------------------------------------------------------------------------
// 1. Options
// ----------------------------------------------------------------------------
$flexie: (
  gutter: 20px
);


// ----------------------------------------------------------------------------
// 2. Row helpers
// ----------------------------------------------------------------------------

// Flexie row gutter
@mixin flx-row-gutter($gutter: map-get($flexie, gutter)) {
  @if $gutter != map-get($flexie, gutter) {
    margin-left: $gutter/-2;
    margin-right: $gutter/-2;
  } @else {
    margin-left: map-get($flexie, gutter)/-2;
    margin-right: map-get($flexie, gutter)/-2;
  }
}

// Flexie row direction
@mixin flx-row-direction($direction: row) {
  @if index('row' 'row-reverse' 'column' 'column-reverse', $direction) {
    flex-direction: $direction;
  }
}

// Flexie row wrap
@mixin flx-row-wrap($wrap: wrap) {
  @if index('wrap' 'wrap-reverse' 'nowrap', $wrap) {
    flex-wrap: $wrap;
  }
}

// Flexie row justification
@mixin flx-row-justify($justify: flex-start) {
  $shorthand: (
    right   : flex-end,
    left    : flex-start,
    between : space-between,
    around  : space-around
  );
  @if index('flex-start' 'center' 'flex-end' 'space-between' 'space-around', $justify) {
    justify-content: $justify;
  } @else {
    justify-content: map-get($shorthand, $justify);
  }
}

// Flexie row children align
@mixin flx-row-align($align: flex-start) {
  $shorthand: (
    top    : flex-start,
    bottom : flex-end,
    middle : center
  );
  @if index('flex-start' 'flex-end' 'center' 'stretch' 'baseline', $align) {
    align-items: $align;
  } @else {
    align-items: map-get($shorthand, $align);
  }
}


// ----------------------------------------------------------------------------
// 3. Column helpers
// ----------------------------------------------------------------------------

// Flexie column width
@mixin flx-col-width($width) {
  @if $width != auto {
    flex-grow: 0;
    width: percentage($width);
  } @else {
    flex-basis: 0;
    flex-grow: 1;
  }
}

// Flexie coloumn align
@mixin flx-col-align($align) {
  // Column alignment
  @if $align == top {
    align-self: flex-start;
  } @else if $align == middle {
    align-self: center;
  } @else if $align == bottom {
    align-self: flex-end;
  } @else if $align == stretch {
    align-self: stretch;
  } @else {
    @warn 'Flexie columns mixin #{$align} argument only accepts top, middle, bottom, or stretch';
  }
}

// Flexie column ordering
@mixin flx-col-order($order) {
  @if $order != 0 {
    order: $order;
  }
}

// Flexie column gutter width
@mixin flx-col-gutter($gutter) {
  @if $gutter > 0 {
    padding-left: $gutter/2;
    padding-right: $gutter/2;
  } @else {
    @warn 'Flexie column mixin #{$gutter} argument only accepts values greater than zero!';
  }
}


// ----------------------------------------------------------------------------
// 4. Flexie mixins
// ----------------------------------------------------------------------------

// Row mixin
@mixin flexie-row($direction: row, $wrap: wrap, $gutter: 20px, $justify: '', $align: '') {
  @include flx-row-direction($direction);
  @include flx-row-wrap($wrap);
  @include flx-row-gutter($gutter);
  @include flx-row-justify($justify);
  @include flx-row-align($align);
  display: flex;
}

// Column mixin
@mixin flexie-col($width: auto, $align: top, $order: 0, $gutter: 20px) {
  @include flx-col-width($width);
  @include flx-col-align($align);
  @include flx-col-order($order);
  @include flx-col-gutter($gutter);
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
}
