// ----------------------------------------------------------------------------
// Flexie grid system
// @author: Azin Asili
//
// Flexie is a modular SCSS flexbox grid system
// Use the predefined row an column mixins
// or customize your own grid system with the helper mixins
//
// 1. Options
// 2. Row helpers
// 3. Column helpers
// 4. Flexie mixins
// ----------------------------------------------------------------------------


// ----------------------------------------------------------------------------
// 1. Options
// ----------------------------------------------------------------------------
$flexie: (
  gutter: 20px
);


// ----------------------------------------------------------------------------
// 2. Row helpers
// ----------------------------------------------------------------------------

// Flexie row gutter
@mixin flx-row-gutter($gutter: 20px) {
  @if map-has-key($flexie, gutter) {
    margin-left: map-get($flexie, gutter)/-2;
    margin-right: map-get($flexie, gutter)/-2;
  } @else if $gutter != 0 and $gutter > 0 {
    margin-left: -$gutter/2;
    margin-right: -$gutter/2;
  } @else {
    @warn 'Flexie row mixin #{$gutter} argument only accepts values greater than zero.';
  }
}

// Flexie row direction
@mixin flx-row-direction($direction: row) {
  @if index('column' 'column-reverse' 'row-reverse', $direction) {
    flex-direction: $direction;
  } @else {
    flex-direction: row;
  }
}

// Flexie row wrap
@mixin flx-row-wrap($wrap: wrap) {
  @if index('wrap-reverse' 'nowrap', $wrap) {
    flex-wrap: $wrap;
  } @else {
    flex-wrap: wrap;
  }
}

// Flexie row justification
@mixin flx-row-justify($justify: left) {
  @if $justify == 'right' {
    justify-content: flex-end;
  } @else if $justify == 'center' {
    justify-content: center;
  } @else if $justify == 'between' {
    justify-content: space-between;
  } @else if $justify == 'around' {
    justify-content: space-around;
  } @else {
    justify-content: flex-start;
  }
}

// Flexie row children align
@mixin flx-row-align($align: top) {
  @if $align == 'bottom' {
    align-items: flex-end;
  } @else if $align == 'middle' {
    align-items: center;
  } @else if $align == 'stretch' {
    align-items: stretch;
  } @else if $align == 'baseline' {
    align-items: baseline;
  } @else {
    align-items: flex-start;
  }
}


// ----------------------------------------------------------------------------
// 3. Column helpers
// ----------------------------------------------------------------------------

// Flexie column width
@mixin flx-col-width($width) {
  @if $width != auto {
    flex-grow: 0;
    width: percentage($width);
  } @else {
    flex-basis: 0;
    flex-grow: 1;
  }
}

// Flexie coloumn align
@mixin flx-col-align($align) {
  // Column alignment
  @if $align == top {
    align-self: flex-start;
  } @else if $align == middle {
    align-self: center;
  } @else if $align == bottom {
    align-self: flex-end;
  } @else if $align == stretch {
    align-self: stretch;
  } @else {
    @warn 'Flexie columns mixin #{$align} argument only accepts top, middle, bottom, or stretch';
  }
}

// Flexie column ordering
@mixin flx-col-order($order) {
  @if $order != 0 {
    order: $order;
  }
}

// Flexie column gutter width
@mixin flx-col-gutter($gutter) {
  @if $gutter > 0 {
    padding-left: $gutter/2;
    padding-right: $gutter/2;
  } @else {
    @warn 'Flexie column mixin #{$gutter} argument only accepts values greater than zero!';
  }
}


// ----------------------------------------------------------------------------
// 4. Flexie mixins
// ----------------------------------------------------------------------------

// Row mixin
@mixin flexie-row($direction: row, $wrap: wrap, $gutter: 20px) {
  @include flx-row-direction($direction);
  @include flx-row-wrap($wrap);
  @include flx-row-gutter($gutter);
  display: flex;
}

// Column mixin
@mixin flexie-col($width: auto, $align: top, $order: 0, $gutter: 20px) {
  @include flx-col-width($width);
  @include flx-col-align($align);
  @include flx-col-order($order);
  @include flx-col-gutter($gutter);
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
}
