/// Flexie grid system
/// @author: Azin Asili
/// @link https://github.com/azinasili/flexie

/// Get flex display
///
/// @param {String} $flexie-display - get flex display property
///
/// @return {Value} flex display property
@function flexie-display($flexie-display) {
  @if not index('flex' 'inline-flex', $flexie-display) {
    @warn '`#{$flexie-display}` is not a valid argument of flexie-display(). Please use `flex` or `inline-flex` instead.';
  }
  @return $flexie-display;
}

/// Get direction of flex items
///
/// @param {String} $flexie-direction - get flex direction property
///
/// @return {Value} flex direction property
@function flexie-direction($flexie-direction) {
  @if not index('row' 'row-reverse' 'column' 'column-reverse', $flexie-direction) {
    @warn '`#{$flexie-direction}` is not a valid argument of flexie-direction(). Please use `row`, `row-reverse`, `column`, or `column-reverse` instead.';
  }
  @return $flexie-direction;
}

/// Calculate gutter for rows or columns
///
/// @param {number} $flexie-gutter - get value to calculate
/// @param {String} $row-or-col ['col'] - determine how to calculate gutter width
///
/// @return {number} half of $flexie-gutter for row or column
@function flexie-gutter($flexie-gutter, $row-or-col: col) {
  @if $flexie-gutter == 0 {
    @return $flexie-gutter;
  } @else if type-of($flexie-gutter) != number or unitless($flexie-gutter) == true {
    @warn '`#{$flexie-gutter}` is not a valid argument of flexie-gutter(). Please use a number with a unit instead';
  }
  @if $row-or-col == 'col' {
    @return $flexie-gutter/2;
  } @else if $row-or-col == 'row' {
    @return $flexie-gutter/-2;
  }
}

/// Get flex items re-flow
///
/// @param {String} $flexie-wrap - get flex items re-flow property
///
/// @return {Value} flex item re-flow property
@function flexie-wrap($flexie-wrap) {
  @if not index('wrap' 'wrap-reverse' 'nowrap', $flexie-wrap) {
    @warn '`#{$flexie-wrap}` is not a valid argument of flexie-wrap(). Please use `wrap`, `wrap-reverse`, or `nowrap` instead.';
  }
  @return $flexie-wrap;
}

/// Get flex items horizontal distribution
///
/// @param {String} $flexie-justify - get flex items horizontal distribution property
///
/// @return {Value} flex item horizontal distribution property
@function flexie-justify($flexie-justify) {
  $shorthand: (
    around  : space-around,
    between : space-between,
    left    : flex-start,
    right   : flex-end
  );
  @if not index('flex-start' 'flex-end' 'center' 'space-around' 'space-between', $flexie-justify) and map-has-key($shorthand, $flexie-justify) == false {
    @warn '`#{$flexie-justify}` is not a valid argument for flexie-justify(). Please use `flex-start`, `flex-end`, `center`, `space-around`, `space-between`, `around`, `between`, `left`, or `right` instead.';
  } @else if map-has-key($shorthand, $flexie-justify) {
    @return map-get($shorthand, $flexie-justify);
  }
  @return $flexie-justify;
}

/// Get flex items row and column alignment
///
/// @param {String} $flexie-col-align - get row or column alignment
///
/// @return {Value} flex item alignment
@function flexie-align($flexie-align) {
  $shorthand: (
    bottom : flex-end,
    middle : center,
    top    : flex-start
  );
  @if not index('flex-start' 'flex-end' 'center' 'stretch' 'baseline', $flexie-align) and map-has-key($shorthand, $flexie-align) == false {
    @warn '`#{$flexie-align}` is not a valid argument for flexie-align(). Please use `flex-start`, `flex-end`, `center`, `stretch`, `baseline`, `bottom`, `middle`, or `top` instead.';
  } @else if map-has-key($shorthand, $flexie-align) {
    @return map-get($shorthand, $flexie-align);
  }
  @return $flexie-align;
}

/// Get flex item source order
///
/// @param {Number} $flexie-order - get new source order
///
/// @return {Number} new source order
@function flexie-order($flexie-order) {
  @if type-of($flexie-order) != number or unitless($flexie-order) != true or round($flexie-order) != $flexie-order {
    @warn '`#{$flexie-order}` is not a valid argument of flexie-order(). Please use a unit-less integer instead.';
  }
  @return $flexie-order;
}
